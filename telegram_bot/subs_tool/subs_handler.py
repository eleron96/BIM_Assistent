import aiohttp
from telegram import Update
from telegram.ext import CallbackContext
from telegram.ext import CommandHandler
from telegram_bot.handlers.security_check import is_user_whitelisted


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å API

async def get_linkedin_latest(profile_id: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/linkedin/latest?profile_id={profile_id}") as resp:
            data = await resp.json()
            print(f"LinkedIn latest data: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
            return data

async def get_youtube_latest(channel_id: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/youtube/latest?channel_id={channel_id}") as resp:
            data = await resp.json()
            print(f"YouTube latest data: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
            return data

async def get_medium_latest(username: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/medium/latest?username={username}") as resp:
            data = await resp.json()
            print(f"Medium latest data: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API
            return data

async def get_statistics_linkedin(profile_id: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/linkedin/statistics?profile_id={profile_id}") as resp:
            return await resp.json()

async def get_statistics_youtube(channel_id: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/youtube/statistics?channel_id={channel_id}") as resp:
            return await resp.json()

async def get_statistics_medium(username: str):
    async with aiohttp.ClientSession() as session:
        async with session.get(f"http://194.35.119.49:8090/medium/statistics?username={username}") as resp:
            return await resp.json()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
async def get_followers_data():
    profile_id = "gamsakhurdiya"  # LinkedIn
    channel_id = "UCRhID0powzDpE4D2KuVKGHg"  # YouTube
    username = "Eleron"  # Medium

    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å API
    linkedin_data = await get_linkedin_latest(profile_id)
    linkedin_stats = await get_statistics_linkedin(profile_id)

    youtube_data = await get_youtube_latest(channel_id)
    youtube_stats = await get_statistics_youtube(channel_id)

    medium_data = await get_medium_latest(username)
    medium_stats = await get_statistics_medium(username)

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä—Å–∏–Ω–≥–æ–º
    linkedin_followers = linkedin_data.get('latest_data', {}).get('count', 'N/A')
    youtube_followers = youtube_data.get('latest_data', {}).get('count', 'N/A')
    medium_followers = medium_data.get('latest_data', {}).get('count', 'N/A')

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
    response = f"""
*üìä –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –ø–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º:*

**LinkedIn**:
- **–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤**: {linkedin_followers}
- **–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞ –¥–µ–Ω—å**: {linkedin_stats.get('statistics', {}).get('24h', 'N/A')}%

**YouTube**:
- **–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤**: {youtube_followers}
- **–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü**: {youtube_stats.get('statistics', {}).get('month', 'N/A')}%

**Medium**:
- **–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤**: {medium_followers}
- **–ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞ –º–µ—Å—è—Ü**: {medium_stats.get('statistics', {}).get('month', 'N/A')}%
"""
    return response



# –•–µ–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /subs_status
async def subs_handler(update: Update, context: CallbackContext):
    user_id = update.effective_user.id
    if not is_user_whitelisted(user_id):
        await update.message.reply_text('–û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.')
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    response = await get_followers_data()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await update.message.reply_text(response, parse_mode="Markdown")
