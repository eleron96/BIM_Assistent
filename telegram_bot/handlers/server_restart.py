import os
import logging
import requests
from telegram import Update
from telegram.ext import CallbackContext
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG,
                    format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger()


async def restart_server():
    try:
        logger.debug(
            "–ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ Timeweb Cloud API")
        headers = {
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + os.getenv('TIMEWEB_CLOUD_TOKEN', ''),
        }
        response = requests.post(
            'https://api.timeweb.cloud/api/v1/servers/3109085/reboot',
            headers=headers)

        if response.status_code == 200:
            logger.debug("–ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        else:
            logger.error(
                f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {response.status_code} - {response.text}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")


async def server_restart(update: Update, context: CallbackContext):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–¥ –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç
    user_name = os.popen("whoami").read().strip()
    logger.debug(f"–°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {user_name}")

    user = update.message.from_user
    await update.message.reply_text(
        f"üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞, {user.first_name}...\n"
        f"–°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {user_name}"
    )

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    await restart_server()
